{"version":3,"sources":["Modal.module.css","Modal.js","App.js","index.js"],"names":["module","exports","BackDrop","props","onClick","onclick","className","classes","backdrop","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDom","createPortal","Comp","id","data","remove","add","initialSchema","createSchema","nodes","links","App","useState","show","setshow","setmodal","parent","setparent","useSchema","schema","onChange","addNode","removeNode","deleteNodeFromSchema","holder","a","length","output","splice","push","input","b","c","d","coordinates","render","addNewNode","nextNode","showmodal","Math","random","readonly","choose","ReactDOM"],"mappings":"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","file":"static/js/main.6e0aeb64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1utJ9\",\"modal\":\"Modal_modal__4KWQD\",\"slide-down\":\"Modal_slide-down__6KPja\"};","import { Fragment } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst BackDrop = (props) => {\r\n  return <div onClick={props.onclick} className={classes.backdrop}></div>;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById(\"modal\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDom.createPortal(\r\n        <BackDrop onclick={props.onclick} />,\r\n        portalElement\r\n      )}\r\n      {ReactDom.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React, { Fragment, useState } from \"react\";\nimport \"beautiful-react-diagrams/styles.css\";\nimport Diagram, { createSchema, useSchema } from \"beautiful-react-diagrams\";\nimport \"./App.css\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport { AiOutlineMinusCircle } from \"react-icons/ai\";\nimport Modal from \"./Modal\";\n\nconst Comp = ({ id, content, data }) => (\n  <div className='compmain'>\n    <div className='iconholder'>\n      <AiOutlineMinusCircle\n        onClick={() => data.remove(id)}\n        className='cross'\n      />\n      <AiOutlinePlusCircle\n        onClick={() => data.add(id)}\n        className='plus'\n      />\n    </div>\n\n    <p className='p'>{content}</p>\n  </div>\n);\n\nconst initialSchema = createSchema({\n  nodes: [],\n  links: [],\n});\n\nexport default function App() {\n  const [show, setshow] = useState(false);\n  const [modal, setmodal] = useState(false);\n  const [parent, setparent] = useState(\"\");\n  const [schema, { onChange, addNode, removeNode }] = useSchema(initialSchema);\n\n  function deleteNodeFromSchema(id) {\n    let holder = [];\n    for (let a = 0; a < schema.nodes.length; a++) {\n      // console.log(\"d\");\n      if (schema.links[a] && schema.links[a].output === id) {\n        schema.links.splice(a, 1);\n        holder.push(id);\n        a = -1;\n      }\n      if (schema.links[a] && schema.links[a].input === id) {\n        holder.push(schema.links[a].output);\n        schema.links.splice(a, 1);\n        a = -1;\n      }\n      for (let b = 0; b < schema.nodes.length; b++) {\n        if (\n          schema.links[b] &&\n          holder[a] &&\n          schema.links[b].input === holder[a]\n        ) {\n          holder.push(schema.links[b].output);\n          schema.links.splice(b, 1);\n          b = -1;\n          a = -1;\n        }\n      }\n    }\n    for (let c = 0; c < schema.nodes.length; c++) {\n      for (let d = 0; d < schema.nodes.length; d++) {\n        if (\n          schema.nodes[d] &&\n          holder[c] &&\n          schema.nodes[d].id === holder[c]\n        ) {\n          schema.nodes.splice(d, 1);\n          holder.splice(c, 1);\n          d = -1;\n          c = -1;\n        }\n      }\n    }\n\n    let demoNode = {\n      id: \"demo\",\n      content: \"demo\",\n      coordinates: [10, 10],\n      render: Comp,\n    };\n    addNode(demoNode);\n\n    if (id === \"master-1\") {\n      setshow(false);\n      schema.nodes.splice(0);\n    }\n    \n  }\n\n  const addNewNode = (content, id) => {\n    setshow(true);\n    let nextNode = {};\n    if (schema.nodes.length < 1) {\n      nextNode = {\n        id: id,\n        content: content,\n        coordinates: [250, 160],\n        render: Comp,\n        data: { remove: deleteNodeFromSchema, add: showmodal },\n      };\n    } else {\n      nextNode = {\n        id: `node-${Math.random()}`,\n        content: content,\n        coordinates: [250, 160],\n        render: Comp,\n        data: { remove: deleteNodeFromSchema, add: showmodal },\n      };\n    }\n\n    if (schema.nodes.length > 0) {\n      schema.links.push({\n        input: id,\n        output: nextNode.id,\n        readonly: true,\n      });\n    }\n\n    addNode(nextNode);\n  };\n\n  const showmodal = (id) => {\n    setmodal(true);\n    setparent(id);\n  };\n  const choose = (content) => {\n    setmodal(false);\n    addNewNode(content, parent);\n  };\n\n  for (let d = 0; d < schema.nodes.length; d++) {\n    if (schema.nodes[d] && schema.nodes[d].id === \"demo\") {\n      schema.nodes.splice(d, 1);\n\n      d = -1;\n    }\n  }\n\n  return (\n    <Fragment>\n      {modal && (\n        <Modal>\n          <p className='category' onClick={() => choose(\"Alpha\")}>\n            Alpha\n          </p>\n          <p className='category' onClick={() => choose(\"Beta\")}>\n            {\" \"}\n            Beta\n          </p>\n          <p className='category' onClick={() => choose(\"Sigma\")}>\n            Sigma\n          </p>\n        </Modal>\n      )}\n      <div className='dia'>\n        {!show && (\n          <button className='btn' onClick={() => addNewNode(\"Master\", \"master-1\")}>\n            Add node\n          </button>\n        )}\n\n        {show && <Diagram className='digo' schema={schema} onChange={onChange} />}\n      </div>\n    </Fragment>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n\n    <App />\n ,\n\n  document.getElementById(\"diagram\")\n);\n"],"sourceRoot":""}